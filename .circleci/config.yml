version: 2.1
parameters:
  threads:
    type: integer
    default: 3
  duration:
    type: integer
    default: 300
  running-file:
    type: enum
    enum:
      [
        bulk_change/AA-Bulk_Change-ChangeAssetType.jmx,
        bulk_change/AA-Bulk_Change-Impairment_Cancel_Event.jmx,
        bulk_change/AA-Bulk_Change-Movement_Cancel_Event.jmx,
        bulk_change/AA-Bulk_Change-Movement_Register_Event.jmx,
        bulk_change/AA-Bulk_Change-Retirement_Cancel_Event.jmx,
        bulk_change/AA-Bulk_Change-Retirement_Register_Event.jmx,
        bulk_change/AA-Bulk_Change-Sale_Cancel_Event.jmx,
        bulk_change/AA-Bulk_Change-StartUsage_Register_Event.jmx,
        tax_declaration/tax_declaration.jmx,
        corporate_tax/Table16_1_LoginOTP.jmx,
        corporate_tax/Table16_1.jmx,
        corporate_tax/Table16_4.jmx,
        corporate_tax/Table16_7.jmx,
        bulk_change_import/AA-Bulk_Change-ChangeAssetType_CSV_Import.jmx,
        bulk_change_import/AA-Bulk_Change-Impairment_CSV_Import.jmx,
        bulk_change_import/AA-Bulk_Change-Movement_CSV_Import.jmx,
        bulk_change_import/AA-Bulk_Change-Retirement_CSV_Import.jmx,
        bulk_change_import/AA-Bulk_Change-Sale_CSV_Import.jmx,
        bulk_change_import/AA-Bulk_Change-StartUsage_CSV_Import.jmx,
      ]
    default: bulk_change/AA-Bulk_Change-ChangeAssetType.jmx

setup: true
orbs:
  aws-cli: circleci/aws-cli@4.0.0
  aws-eks: circleci/aws-eks@2.2
  kubernetes: circleci/kubernetes@1.3
  jq: circleci/jq@2.2.0

commands:
  setup-environment:
    steps:
      - jq/install
      - aws-cli/setup:
          role_arn: ${AWS_ROLE_ARN}
          profile_name: "qa-service-platform"
          session_duration: "1800"
      - kubernetes/install-kubectl:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "load-test-cluster"
          aws-profile: "qa-service-platform"
          aws-region: ${AWS_DEFAULT_REGION}
      - run:
          name: install qapf-tools
          command: |
            echo "Download qapf"
            asseturl=$(curl -H "Authorization: token ${MINAMI_GITHUB_TOKEN}" https://api.github.com/repos/moneyforward/cqoo-qapf/releases/latest | jq -r '.assets[] | select(.name=="qapf.zip") | .url')
            curl -L -H "Authorization: token ${MINAMI_GITHUB_TOKEN}" -H "Accept:application/octet-stream" ${asseturl} >qapf.zip
            unzip qapf.zip
            chmod +x ./qapf

jobs:
  performance-test:
    docker:
      - image: cimg/base:current
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
      AWS_ACCOUNT_ID: "056699753121"
    steps:
      - checkout
      - setup-environment
      - run:
          name: Conduct performance test
          command: |
            echo "Remove workspace"
            ./qapf remove-workspace aa-performance-jmeter

            echo "Create workspace"
            ./qapf create-workspace aa-performance-jmeter

            echo "Upload scenarios to S3"
            ./qapf upload-test-scenarios -w aa-performance-jmeter -t jmeter -d ./

            echo "Prepare testing environment"
            ./qapf prepare-testing-environment -w aa-performance-jmeter -t jmeter -c ./jmeter-config.yaml

            echo "Conduct performance test"
            ./qapf conduct-perf-test -w aa-performance-jmeter -t jmeter -f services/<< pipeline.parameters.running-file >> -s mfv_aa_performance_notifications

workflows:
  aa-performance-test:
    jobs:
      - performance-test:
          context:
            - deploy-role-load-test-cluster
          # filters:
          #   branches:
          #     only:
          #       - main
